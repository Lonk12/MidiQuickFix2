
package com.lemckes.j2di;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.RenderingHints;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;

/**
 *
 */
public class StarDemo
    extends javax.swing.JFrame {

    private ICanvas mCanvas;
    private ILayer mLayer1;
    private IGroup mStarGroup;
    private IStar mStar;

    /**
     * Creates new form StarDemo
     */
    public StarDemo() {
        initComponents();

        ICanvasScrollPane mScrollPane = new ICanvasScrollPane();
        getContentPane().add(mScrollPane, BorderLayout.CENTER);

        mCanvas = mScrollPane.getCanvas();
        mCanvas.setBackground(Color.white);
        mCanvas.setOpaque(true);

        mLayer1 = new ILayer(600, 600);
        mLayer1.setName("Layer 1");
        mLayer1.putRenderingHint(
            RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        mLayer1.putRenderingHint(
            RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);

        IGroup lineGroup = new IGroup(mLayer1);
        ILine vert = new ILine(new Line2D.Double(200, 0, 200, 400));
        ILine hor = new ILine(new Line2D.Double(0, 200, 400, 200));
        vert.setPaint(Color.LIGHT_GRAY);
        hor.setPaint(Color.LIGHT_GRAY);
        lineGroup.add(vert);
        lineGroup.add(hor);
        mLayer1.add(lineGroup);

        mStarGroup = new IGroup(mLayer1);
        mStar = new IStar(7, 3, 200, 0);
        mStar.setPosition(200, 200, IShape.AnchorPoint.MIDDLE_CENTRE);
        mStarGroup.add(mStar);
        IEllipse el = new IEllipse(new Ellipse2D.Double(0, 0, 400, 400));
        el.setPosition(200, 200, IShape.AnchorPoint.MIDDLE_CENTRE);
        el.setPaint(Color.LIGHT_GRAY);
        mStarGroup.add(el);
        mLayer1.add(mStarGroup);

        LayerAttachConstraints lac1 = new LayerAttachConstraints();
        lac1.setAttachments(true, true, true, true);
        lac1.setOffsets(0, 0, 0, 0);
        lac1.setLayerIndex(0);

        mCanvas.add(mLayer1, lac1);
        mCanvas.setSize();

        pack();
        mLayer1.setScreenViewSize(mScrollPane.getViewport().getExtentSize(), true);
        mLayer1.setWorldViewSize(new IDimension(400, 400), true);
    }

    private void redraw() {
        mStarGroup.remove(mStar);
        int points = pointsSlider.getValue();
        int step = stepSlider.getValue();
        double radius = radiusSlider.getValue();
        double angle = startAngleSlider.getValue();
        double angleRad = (angle / 360.0) * 2 * Math.PI;
        boolean isFilled = filledRadio.isSelected();
        boolean useDeviceStroke = deviceStrokeCheckbox.isSelected();
        mStar = new IStar(points, step, radius, angleRad);
        mStar.setPosition(200, 200, IShape.AnchorPoint.MIDDLE_CENTRE);
        mStar.setFilled(isFilled);
        mStar.setUseDeviceStroke(useDeviceStroke);
        mStarGroup.add(mStar);
        mLayer1.repaint();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        pointsLabel = new javax.swing.JLabel();
        pointsSlider = new javax.swing.JSlider();
        pointsField = new javax.swing.JFormattedTextField();
        stepLabel = new javax.swing.JLabel();
        stepSlider = new javax.swing.JSlider();
        stepField = new javax.swing.JFormattedTextField();
        radiusLabel = new javax.swing.JLabel();
        radiusSlider = new javax.swing.JSlider();
        radiusField = new javax.swing.JFormattedTextField();
        startAngleLabel = new javax.swing.JLabel();
        startAngleSlider = new javax.swing.JSlider();
        startAngleField = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        filledRadio = new javax.swing.JRadioButton();
        lineRadio = new javax.swing.JRadioButton();
        deviceStrokeCheckbox = new javax.swing.JCheckBox();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/lemckes/j2di/Bundle"); // NOI18N
        setName(bundle.getString("StarDemo.name")); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 6, 6, 6));
        jPanel2.setName(bundle.getString("StarDemo.jPanel2.name")); // NOI18N
        jPanel2.setLayout(new java.awt.GridBagLayout());

        pointsLabel.setText(bundle.getString("StarDemo.pointsLabel.text")); // NOI18N
        pointsLabel.setName(bundle.getString("StarDemo.pointsLabel.name")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 4);
        jPanel2.add(pointsLabel, gridBagConstraints);

        pointsSlider.setMajorTickSpacing(6);
        pointsSlider.setMaximum(60);
        pointsSlider.setMinimum(3);
        pointsSlider.setMinorTickSpacing(1);
        pointsSlider.setPaintLabels(true);
        pointsSlider.setPaintTicks(true);
        pointsSlider.setPaintTrack(false);
        pointsSlider.setSnapToTicks(true);
        pointsSlider.setValue(7);
        pointsSlider.setName(bundle.getString("StarDemo.pointsSlider.name")); // NOI18N
        pointsSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                pointsSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        jPanel2.add(pointsSlider, gridBagConstraints);

        pointsField.setColumns(4);
        pointsField.setEditable(false);
        pointsField.setName(bundle.getString("StarDemo.pointsField.name")); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, pointsSlider, org.jdesktop.beansbinding.ELProperty.create("${value}"), pointsField, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 9);
        jPanel2.add(pointsField, gridBagConstraints);

        stepLabel.setText(bundle.getString("StarDemo.stepLabel.text")); // NOI18N
        stepLabel.setName(bundle.getString("StarDemo.stepLabel.name")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 4);
        jPanel2.add(stepLabel, gridBagConstraints);

        stepSlider.setMajorTickSpacing(1);
        stepSlider.setMaximum(3);
        stepSlider.setMinimum(1);
        stepSlider.setMinorTickSpacing(1);
        stepSlider.setPaintLabels(true);
        stepSlider.setPaintTicks(true);
        stepSlider.setPaintTrack(false);
        stepSlider.setSnapToTicks(true);
        stepSlider.setName(bundle.getString("StarDemo.stepSlider.name")); // NOI18N
        stepSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                stepSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        jPanel2.add(stepSlider, gridBagConstraints);

        stepField.setColumns(4);
        stepField.setEditable(false);
        stepField.setName(bundle.getString("StarDemo.stepField.name")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, stepSlider, org.jdesktop.beansbinding.ELProperty.create("${value}"), stepField, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 9);
        jPanel2.add(stepField, gridBagConstraints);

        radiusLabel.setText(bundle.getString("StarDemo.radiusLabel.text")); // NOI18N
        radiusLabel.setName(bundle.getString("StarDemo.radiusLabel.name")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 4);
        jPanel2.add(radiusLabel, gridBagConstraints);

        radiusSlider.setMajorTickSpacing(100);
        radiusSlider.setMaximum(400);
        radiusSlider.setMinorTickSpacing(10);
        radiusSlider.setPaintLabels(true);
        radiusSlider.setPaintTicks(true);
        radiusSlider.setPaintTrack(false);
        radiusSlider.setValue(200);
        radiusSlider.setName(bundle.getString("StarDemo.radiusSlider.name")); // NOI18N
        radiusSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                radiusSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        jPanel2.add(radiusSlider, gridBagConstraints);

        radiusField.setColumns(4);
        radiusField.setEditable(false);
        radiusField.setName(bundle.getString("StarDemo.radiusField.name")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, radiusSlider, org.jdesktop.beansbinding.ELProperty.create("${value}"), radiusField, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(radiusField, gridBagConstraints);

        startAngleLabel.setText(bundle.getString("StarDemo.startAngleLabel.text")); // NOI18N
        startAngleLabel.setName(bundle.getString("StarDemo.startAngleLabel.name")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 4);
        jPanel2.add(startAngleLabel, gridBagConstraints);

        startAngleSlider.setMajorTickSpacing(60);
        startAngleSlider.setMaximum(360);
        startAngleSlider.setMinorTickSpacing(10);
        startAngleSlider.setPaintLabels(true);
        startAngleSlider.setPaintTicks(true);
        startAngleSlider.setPaintTrack(false);
        startAngleSlider.setValue(0);
        startAngleSlider.setName(bundle.getString("StarDemo.startAngleSlider.name")); // NOI18N
        startAngleSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                startAngleSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        jPanel2.add(startAngleSlider, gridBagConstraints);

        startAngleField.setColumns(4);
        startAngleField.setEditable(false);
        startAngleField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        startAngleField.setName(bundle.getString("StarDemo.startAngleField.name")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, startAngleSlider, org.jdesktop.beansbinding.ELProperty.create("${value}"), startAngleField, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel2.add(startAngleField, gridBagConstraints);

        jPanel1.setName(bundle.getString("StarDemo.jPanel1.name")); // NOI18N
        jPanel1.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(filledRadio);
        filledRadio.setText(bundle.getString("StarDemo.filledRadio.text")); // NOI18N
        filledRadio.setName(bundle.getString("StarDemo.filledRadio.name")); // NOI18N
        filledRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filledRadioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(filledRadio, gridBagConstraints);

        buttonGroup1.add(lineRadio);
        lineRadio.setSelected(true);
        lineRadio.setText(bundle.getString("StarDemo.lineRadio.text")); // NOI18N
        lineRadio.setName(bundle.getString("StarDemo.lineRadio.name")); // NOI18N
        lineRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineRadioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 9, 0, 0);
        jPanel1.add(lineRadio, gridBagConstraints);

        deviceStrokeCheckbox.setSelected(true);
        deviceStrokeCheckbox.setText(bundle.getString("StarDemo.deviceStrokeCheckbox.text")); // NOI18N
        deviceStrokeCheckbox.setName(bundle.getString("StarDemo.deviceStrokeCheckbox.name")); // NOI18N
        deviceStrokeCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deviceStrokeCheckboxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(deviceStrokeCheckbox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(9, 0, 0, 0);
        jPanel2.add(jPanel1, gridBagConstraints);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        menuBar.setName(bundle.getString("StarDemo.menuBar.name")); // NOI18N

        fileMenu.setMnemonic('f');
        fileMenu.setText(bundle.getString("StarDemo.fileMenu.text")); // NOI18N
        fileMenu.setName(bundle.getString("StarDemo.fileMenu.name")); // NOI18N

        openMenuItem.setMnemonic('o');
        openMenuItem.setText(bundle.getString("StarDemo.openMenuItem.text")); // NOI18N
        openMenuItem.setName(bundle.getString("StarDemo.openMenuItem.name")); // NOI18N
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText(bundle.getString("StarDemo.saveMenuItem.text")); // NOI18N
        saveMenuItem.setName(bundle.getString("StarDemo.saveMenuItem.name")); // NOI18N
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText(bundle.getString("StarDemo.saveAsMenuItem.text")); // NOI18N
        saveAsMenuItem.setName(bundle.getString("StarDemo.saveAsMenuItem.name")); // NOI18N
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText(bundle.getString("StarDemo.exitMenuItem.text")); // NOI18N
        exitMenuItem.setName(bundle.getString("StarDemo.exitMenuItem.name")); // NOI18N
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText(bundle.getString("StarDemo.editMenu.text")); // NOI18N
        editMenu.setName(bundle.getString("StarDemo.editMenu.name")); // NOI18N

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText(bundle.getString("StarDemo.cutMenuItem.text")); // NOI18N
        cutMenuItem.setName(bundle.getString("StarDemo.cutMenuItem.name")); // NOI18N
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText(bundle.getString("StarDemo.copyMenuItem.text")); // NOI18N
        copyMenuItem.setName(bundle.getString("StarDemo.copyMenuItem.name")); // NOI18N
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText(bundle.getString("StarDemo.pasteMenuItem.text")); // NOI18N
        pasteMenuItem.setName(bundle.getString("StarDemo.pasteMenuItem.name")); // NOI18N
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText(bundle.getString("StarDemo.deleteMenuItem.text")); // NOI18N
        deleteMenuItem.setName(bundle.getString("StarDemo.deleteMenuItem.name")); // NOI18N
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText(bundle.getString("StarDemo.helpMenu.text")); // NOI18N
        helpMenu.setName(bundle.getString("StarDemo.helpMenu.name")); // NOI18N

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText(bundle.getString("StarDemo.contentsMenuItem.text")); // NOI18N
        contentsMenuItem.setName(bundle.getString("StarDemo.contentsMenuItem.name")); // NOI18N
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText(bundle.getString("StarDemo.aboutMenuItem.text")); // NOI18N
        aboutMenuItem.setName(bundle.getString("StarDemo.aboutMenuItem.name")); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void pointsSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_pointsSliderStateChanged
        int value = pointsSlider.getValue();
        // The maximum step value is the integer that is less than half the number of points
        int stepMax = value / 2;
        if (stepMax * 2 == value) {
            stepMax -= 1;
        }
        if (stepMax != stepSlider.getMaximum()) {
            stepSlider.setMaximum(stepMax);
            if (stepMax > 12) {
                stepSlider.setLabelTable(null);
                stepSlider.setMajorTickSpacing(2);
            } else {
                stepSlider.setLabelTable(null);
                stepSlider.setMajorTickSpacing(1);
            }
        } else {
            redraw();
        }
    }//GEN-LAST:event_pointsSliderStateChanged

    private void stepSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_stepSliderStateChanged
        redraw();
    }//GEN-LAST:event_stepSliderStateChanged

    private void radiusSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_radiusSliderStateChanged
        redraw();
    }//GEN-LAST:event_radiusSliderStateChanged

    private void startAngleSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_startAngleSliderStateChanged
        redraw();
    }//GEN-LAST:event_startAngleSliderStateChanged

    private void filledRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filledRadioActionPerformed
        deviceStrokeCheckbox.setEnabled(!filledRadio.isSelected());
        redraw();
    }//GEN-LAST:event_filledRadioActionPerformed

    private void lineRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineRadioActionPerformed
        deviceStrokeCheckbox.setEnabled(lineRadio.isSelected());
        redraw();
    }//GEN-LAST:event_lineRadioActionPerformed

    private void deviceStrokeCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deviceStrokeCheckboxActionPerformed
        redraw();
    }//GEN-LAST:event_deviceStrokeCheckboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(StarDemo.class.getName()).log(java.util.logging.Level.WARNING, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(StarDemo.class.getName()).log(java.util.logging.Level.WARNING, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(StarDemo.class.getName()).log(java.util.logging.Level.WARNING, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(StarDemo.class.getName()).log(java.util.logging.Level.WARNING, null, ex);
//        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new StarDemo().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JCheckBox deviceStrokeCheckbox;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JRadioButton filledRadio;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton lineRadio;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JFormattedTextField pointsField;
    private javax.swing.JLabel pointsLabel;
    private javax.swing.JSlider pointsSlider;
    private javax.swing.JFormattedTextField radiusField;
    private javax.swing.JLabel radiusLabel;
    private javax.swing.JSlider radiusSlider;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JFormattedTextField startAngleField;
    private javax.swing.JLabel startAngleLabel;
    private javax.swing.JSlider startAngleSlider;
    private javax.swing.JFormattedTextField stepField;
    private javax.swing.JLabel stepLabel;
    private javax.swing.JSlider stepSlider;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
