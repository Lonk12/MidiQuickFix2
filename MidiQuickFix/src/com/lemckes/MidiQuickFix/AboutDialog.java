/**************************************************************
 *
 *   MidiQuickFix - A Simple Midi file editor and player
 *
 *   Copyright (C) 2004-2005 John Lemcke
 *   jostle@users.sourceforge.net
 *
 *   This program is free software; you can redistribute it
 *   and/or modify it under the terms of the Artistic License
 *   as published by Larry Wall, either version 2.0,
 *   or (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *   See the Artistic License for more details.
 *
 *   You should have received a copy of the Artistic License with this Kit,
 *   in the file named "Artistic.clarified".
 *   If not, I'll be glad to provide one.
 *
 **************************************************************/

package com.lemckes.MidiQuickFix;

import java.util.Properties;

/**
 * Show the About dialog.
 * @version $Id$
 */
public class AboutDialog extends javax.swing.JDialog {
    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;
    
    /**
     * The component that displays our splash screen
     */
    SplashDrawing mSplash;
    
    /** Creates new Startup dialog */
    public AboutDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        setTitle("About MidiQuickFix");
        mSplash = new SplashDrawing();
        mSplash.setCentredText(true);
        mSplash.setStageMessage("MidiQuickFix - A Simple Midi file editor and player");
        mSplash.setStageMessage("http://midiquickfix.sourceforge.net");
        mSplash.setStageMessage("");
        mSplash.setStageMessage("Copyright (C) 2004-2005 John Lemcke");
        mSplash.setStageMessage("jostle@users.sourceforge.net");
        
        showSystemInfo();
        
        initComponents();
        getContentPane().add(mSplash, java.awt.BorderLayout.CENTER);
        pack();
        java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        java.awt.Dimension sd = tk.getScreenSize();
        java.awt.Dimension dd = getSize();
        setLocation((int)((sd.getWidth() - dd.getWidth()) / 2), (int)((sd.getHeight() - dd.getHeight()) / 2));
    }
    
    void showSystemInfo() {
        Properties p = System.getProperties();
        
        String name = p.getProperty("java.vm.name", "Unknown Java");
        String version = p.getProperty("java.vm.version", "Unknown Version");
        String vendor = p.getProperty("java.vm.vendor", "Unknown Vendor");
        
        mSplash.setStageMessage("");
        mSplash.setStageMessage(name + " - " + version);
        mSplash.setStageMessage("Vendor : " + vendor);
        
        String osname = p.getProperty("os.name", "Unknown Java");
        String osversion = p.getProperty("os.version", "Unknown Version");
        String arch = p.getProperty("os.arch", "Unknown Vendor");
        
        mSplash.setStageMessage("");
        mSplash.setStageMessage(osname + " - " + arch + " - " + osversion);
    }
    
    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MidiQuickFix");
        setFont(new java.awt.Font("Dialog", 1, 14));
        setName("aboutDialog");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        okButton.setText(java.util.ResourceBundle.getBundle("com/lemckes/MidiQuickFix/resources/UIStrings").getString("ok"));
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(okButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents
    
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_OK);
    }//GEN-LAST:event_closeDialog
    
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new AboutDialog(new javax.swing.JFrame(), true).setVisible(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
    
    private int returnStatus = RET_OK;
}
