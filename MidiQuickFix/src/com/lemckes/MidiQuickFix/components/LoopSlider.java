/*
 * LoopSlider.java
 *
 * Created on 3 March 2006, 22:39
 */

package com.lemckes.MidiQuickFix.components;

import com.lemckes.MidiQuickFix.util.Formats;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.geom.GeneralPath;
import javax.swing.event.ChangeListener;

/**
 *
 * @author  john
 */
public class LoopSlider extends javax.swing.JPanel implements ChangeListener {
    
    /** Creates new form LoopSlider */
    public LoopSlider() {
        initComponents();
        loopInButton.setPreferredSize(new Dimension(19,14));
        GeneralPath inPath = new GeneralPath();
        inPath.moveTo(0.3f, 0.2f);
        inPath.lineTo(0.3f, 0.8f);
        inPath.lineTo(0.7f, 0.2f);
        inPath.closePath();
        inPath.moveTo(0.1f, 0.8f);
        inPath.lineTo(0.9f, 0.8f);
        inPath.moveTo(0.2f, 0.7f);
        inPath.lineTo(0.2f, 0.8f);
        inPath.moveTo(0.4f, 0.7f);
        inPath.lineTo(0.4f, 0.8f);
        inPath.moveTo(0.6f, 0.7f);
        inPath.lineTo(0.6f, 0.8f);
        inPath.moveTo(0.8f, 0.7f);
        inPath.lineTo(0.8f, 0.8f);
        loopInButton.setPath(inPath);
        loopInButton.setFilled(true);
        loopInButton.setBordered(true);
        loopInButton.setFillColour(Color.BLACK);
        
        loopOutButton.setPreferredSize(new Dimension(19,14));
        GeneralPath outPath = new GeneralPath();
        outPath.moveTo(0.3f, 0.2f);
        outPath.lineTo(0.7f, 0.2f);
        outPath.lineTo(0.7f, 0.8f);
        outPath.closePath();
        outPath.moveTo(0.1f, 0.8f);
        outPath.lineTo(0.9f, 0.8f);
        outPath.moveTo(0.2f, 0.7f);
        outPath.lineTo(0.2f, 0.8f);
        outPath.moveTo(0.4f, 0.7f);
        outPath.lineTo(0.4f, 0.8f);
        outPath.moveTo(0.6f, 0.7f);
        outPath.lineTo(0.6f, 0.8f);
        outPath.moveTo(0.8f, 0.7f);
        outPath.lineTo(0.8f, 0.8f);
        loopOutButton.setPath(outPath);
        loopOutButton.setFilled(true);
        loopOutButton.setBordered(true);
        loopOutButton.setFillColour(Color.BLACK);
        
        durationSlider.addChangeListener(this);
    }
    
    public void setDuration(long duration)
    {
        durationSlider.setDuration(duration);
    }

    public void stateChanged(javax.swing.event.ChangeEvent changeEvent) {
        int val = durationSlider.getValue();
        currPositionField.setText(Formats.formatSeconds(val));
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        loopInField = new javax.swing.JTextField();
        loopOutField = new javax.swing.JTextField();
        durationSlider = new com.lemckes.MidiQuickFix.components.DurationSlider();
        currPositionField = new javax.swing.JTextField();
        loopInButton = new com.lemckes.MidiQuickFix.components.DrawnButton();
        loopInLabel = new javax.swing.JLabel();
        loopOutButton = new com.lemckes.MidiQuickFix.components.DrawnButton();
        loopOutLabel = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        loopInField.setColumns(6);
        loopInField.setFont(new java.awt.Font("DialogInput", 0, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        add(loopInField, gridBagConstraints);

        loopOutField.setColumns(6);
        loopOutField.setFont(new java.awt.Font("DialogInput", 0, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.5;
        add(loopOutField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(durationSlider, gridBagConstraints);

        currPositionField.setColumns(6);
        currPositionField.setFont(new java.awt.Font("DialogInput", 0, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        add(currPositionField, gridBagConstraints);

        loopInButton.setToolTipText("Set Loop-In Point");
        loopInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loopInButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        add(loopInButton, gridBagConstraints);

        loopInLabel.setText(" In ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(loopInLabel, gridBagConstraints);

        loopOutButton.setToolTipText("Set Loop-Out Point");
        loopOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loopOutButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        add(loopOutButton, gridBagConstraints);

        loopOutLabel.setText("Out");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(loopOutLabel, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents

    private void loopOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loopOutButtonActionPerformed
        int val = durationSlider.getValue();
        loopOutField.setText(Formats.formatSeconds(val));
    }//GEN-LAST:event_loopOutButtonActionPerformed

    private void loopInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loopInButtonActionPerformed
        int val = durationSlider.getValue();
        loopInField.setText(Formats.formatSeconds(val));
    }//GEN-LAST:event_loopInButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField currPositionField;
    private com.lemckes.MidiQuickFix.components.DurationSlider durationSlider;
    private com.lemckes.MidiQuickFix.components.DrawnButton loopInButton;
    private javax.swing.JTextField loopInField;
    private javax.swing.JLabel loopInLabel;
    private com.lemckes.MidiQuickFix.components.DrawnButton loopOutButton;
    private javax.swing.JTextField loopOutField;
    private javax.swing.JLabel loopOutLabel;
    // End of variables declaration//GEN-END:variables
    
}
